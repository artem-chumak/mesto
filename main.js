(()=>{"use strict";var e={userName:document.querySelector(".profile__name"),userAbout:document.querySelector(".profile__occupation"),userAvatar:document.querySelector(".profile__avatar"),userId:null},t=document.querySelector(".profile__avatar"),n=document.querySelector(".profile__edit-button"),r=document.querySelector(".profile__add-button"),o=document.querySelector(".elements__list"),i=document.querySelector(".element-template").content,u=document.querySelector("#edit-avatar"),a=u.querySelector("form"),s=document.querySelector("#edit-profile"),c=s.querySelector("form"),l=s.querySelector('input[name="name"]'),f=s.querySelector('input[name="about"]'),h=document.querySelector("#add-place"),p=h.querySelector("form"),d=document.querySelector(".popup_type_image"),_=document.querySelector("#delete-conformation"),y=(document.querySelectorAll('button[type="submit"]'),{inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_error",errorClass:"popup__input-error_active"});function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t){var n=t.data,r=t.cardSelector,o=t.handleCardClick,i=t.userId,u=t.handleLikeClick,a=t.handleDeleteButton;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=n,this._place=n.name,this._link=n.link,this._ownerId=n.owner._id,this._cardId=n._id,this._likes=n.likes,this._cardSelector=r,this._handleCardClick=o,this._userId=i,this._handleLikeClick=u,this._handleDeleteButton=a}var t,n;return t=e,(n=[{key:"getCardId",value:function(){return this._cardId}},{key:"_getTemplate",value:function(){return this._cardSelector.querySelector(".element").cloneNode(!0)}},{key:"_hideDeleteButton",value:function(){this._ownerId!==this._userId&&(this._deleteButton.style.display="none")}},{key:"isLiked",value:function(){return this._isLiked}},{key:"setLike",value:function(e){var t=this;this._isLiked=e.likes.filter((function(e){return e._id==t._userId})).length>0,this._likeCounter.textContent=e.likes.length,this._isLiked?this._likeButton.classList.add("element__like-button_active"):this._likeButton.classList.remove("element__like-button_active")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._titleElement=this._element.querySelector(".element__title"),this._imegeElement=this._element.querySelector(".element__image"),this._likeButton=this._element.querySelector(".element__like-button"),this._likeCounter=this._element.querySelector(".element__like-counter"),this._deleteButton=this._element.querySelector(".element__delete-button"),this._setEventListeners(),this._imegeElement.src=this._link,this._imegeElement.alt=this._place,this._titleElement.textContent=this._place,this._hideDeleteButton(),this.setLike(this._data),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton.addEventListener("click",(function(){e._handleDeleteButton()})),this._likeButton.addEventListener("click",(function(){e._handleLikeClick()})),this._imegeElement.addEventListener("click",(function(){e._handleCardClick(e._place,e._link)}))}},{key:"handleDeleteCard",value:function(){this._element.remove(),this._element=null}}])&&v(t.prototype,n),e}();function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t){var n=t.render,r=t.containerSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._containerSelector=r,this._render=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._render(e)}))}},{key:"addItem",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];t?this._containerSelector.append(e):this._containerSelector.prepend(e)}}])&&b(t.prototype,n),e}();function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__exit-button").addEventListener("click",(function(t){return e.close()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&g(t.prototype,n),e}();function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return(C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function L(e,t){return(L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function O(e,t){return!t||"object"!==E(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function I(e){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupCaption=t._popup.querySelector(".popup__caption"),t}return t=u,(n=[{key:"open",value:function(e,t){this._popupCaption.textContent=e,this._popupImage.src=t,this._popupImage.alt=e,C(I(u.prototype),"open",this).call(this)}}])&&w(t.prototype,n),u}(S);function j(e){return(j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(e,t,n){return(P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function R(e,t){return(R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function T(e,t){return!t||"object"!==j(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function x(e){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=t,n._form=n._popup.querySelector(".popup__form"),n._confirmButton=n._form.querySelector(".popup__save-button"),n._inputs=n._form.querySelectorAll(".popup__input"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=Array.from(this._inputs),this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())})),P(x(u.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){P(x(u.prototype),"close",this).call(this),this._form.reset()}},{key:"setButtonText",value:function(e){this._confirmButton.textContent=e?"Сохранение...":"Сохранить"}}])&&q(t.prototype,n),u}(S);function A(e){return(A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function N(e,t,n){return(N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function V(e,t){return(V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function F(e,t){return!t||"object"!==A(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function H(e){return(H=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&V(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=H(r);if(o){var n=H(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._form=t._popup.querySelector(".popup__form"),t._confirmButton=t._form.querySelector(".popup__save-button"),t}return t=u,(n=[{key:"setNewHandler",value:function(e){this._handleFormSubmit=e}},{key:"setEventListeners",value:function(){var e=this;N(H(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit()}))}},{key:"setButtonText",value:function(e){this._confirmButton.textContent=e?"Удаление...":"Да"}}])&&D(t.prototype,n),u}(S);function M(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var z=function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),M(this,"_hasInvalidInput",(function(){return r._inputList.some((function(e){return!e.validity.valid}))})),M(this,"toggleButtonState",(function(){r._hasInvalidInput()?(r._buttonElement.classList.add(r._inactiveButtonClass),r._buttonElement.setAttribute("disabled","disabled")):(r._buttonElement.classList.remove(r._inactiveButtonClass),r._buttonElement.removeAttribute("disabled"))})),M(this,"_showInputError",(function(e,t){var n=r._form.querySelector("#".concat(e.id,"-error"));e.classList.add(r._inputErrorClass),n.textContent=t,n.classList.add(r._errorClass)})),M(this,"_hideInputError",(function(e){var t=r._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(r._inputErrorClass),t.classList.remove(r._errorClass),t.textContent=""})),M(this,"_isValid",(function(e){!e.validity.valid||e.validity.typeMismatch?r._showInputError(e,e.validationMessage):r._hideInputError(e)})),M(this,"_setEventListeners",(function(){r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._isValid(e),r.toggleButtonState()}))}))})),M(this,"hideError",(function(){r._inputList.forEach((function(e){r._hideInputError(e)}))})),M(this,"enableValidation",(function(){r._setEventListeners(),r._form.addEventListener("submit",(function(e){e.preventDefault()}))})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector)};function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var G=function(){function e(t){var n=t.userName,r=t.userAbout,o=t.userAvatar,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=n,this._userOccupation=r,this._avatar=o,this._userId=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userOccupation.textContent,avatar:this._avatar,userId:this._userId}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userOccupation.textContent=e.about,this._avatar.style.backgroundImage="url(".concat(e.avatar,")"),this._userId=e._id}}])&&$(t.prototype,n),e}();function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Q=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers}).then(this._handleResponse)}},{key:"handleCard",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers}).then(this._handleResponse)}},{key:"handleUserInfo",value:function(e){return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleResponse)}},{key:"handleAvatar",value:function(e){return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"handleLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"handleDislike",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"handleDelete",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}])&&K(t.prototype,n),e}();function W(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function X(e,t){ue.open(e,t)}function Y(e){var t=new m({data:e,cardSelector:i,handleCardClick:X,userId:ie.getUserInfo().userId,handleLikeClick:function(){return function(e,t){(e.isLiked(t)?oe.handleDislike(t._id):oe.handleLike(t._id)).then((function(t){e.setLike(t)})).catch((function(e){console.log(e)}))}(t,e)},handleDeleteButton:function(){return function(e){re.open(),re.setNewHandler((function(){re.setButtonText(!0),oe.handleDelete(e.getCardId()).then((function(){e.handleDeleteCard(),re.close()})).catch((function(e){console.log(e)})).finally((function(){re.setButtonText(!1)}))}))}(t)}});return t.generateCard()}var Z=new k({render:function(e){Z.addItem(Y(e))},containerSelector:o}),ee=new U(h,(function(e){ee.setButtonText(!0),oe.handleCard(e).then((function(e){Z.addItem(Y(e),!1),ee.close()})).catch((function(e){console.log(e)})).finally((function(){ee.setButtonText(!1)}))}));ee.setEventListeners();var te=new U(s,(function(e){te.setButtonText(!0),oe.handleUserInfo(e).then((function(e){ie.setUserInfo(e),te.close()})).catch((function(e){console.log(e)})).finally((function(){te.setButtonText(!1)}))}));te.setEventListeners();var ne=new U(u,(function(e){ne.setButtonText(!0),oe.handleAvatar(e).then((function(e){ie.setUserInfo(e),ne.close()})).catch((function(e){console.log(e)})).finally((function(){ne.setButtonText(!1)}))}));ne.setEventListeners();var re=new J(_);re.setEventListeners();var oe=new Q({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-26/",headers:{authorization:"b0e0b94f-d543-4f9f-b125-9b741686cafd","Content-Type":"application/json"}}),ie=new G(e),ue=new B(d);ue.setEventListeners();var ae=new z(y,a);ae.enableValidation();var se=new z(y,c);se.enableValidation();var ce=new z(y,p);ce.enableValidation(),Promise.all([oe.getCards(),oe.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return W(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?W(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ie.setUserInfo(i),Z.renderItems(o)})).catch((function(e){console.log(e)})),t.addEventListener("click",(function(){ae.toggleButtonState(),ae.hideError(),ne.open()})),r.addEventListener("click",(function(){ce.toggleButtonState(),ce.hideError(),ee.open()})),n.addEventListener("click",(function(){te.open();var e=ie.getUserInfo();l.value=e.name,f.value=e.about,se.toggleButtonState(),se.hideError()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,